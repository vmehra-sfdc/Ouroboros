digraph BatchEventWriter {

    node
        [shape=Mrecord width=1.5];

    subgraph cluster_BatchEventWriterFSM {

        label="BatchEventWriterFSM";

        //
        // States (Nodes)
        //

        "BatchEventWriterFSM::Suspended"
            [label="{Suspended}"];

        "BatchEventWriterFSM::Waiting"
            [label="{Waiting}"];

        "BatchEventWriterFSM::WriteBatch"
            [label="{WriteBatch}"];

        "BatchEventWriterFSM::Closed"
            [label="{Closed}"];

        "%start"
            [label="" shape=circle style=filled fillcolor=black width=0.25];

        //
        // Transitions (Edges)
        //

        "BatchEventWriterFSM::Suspended" -> "BatchEventWriterFSM::Waiting"
            [label="connect/\l"];

        "BatchEventWriterFSM::Suspended" -> "BatchEventWriterFSM::Closed"
            [label="failover/\l"];

        "BatchEventWriterFSM::Suspended" -> "BatchEventWriterFSM::Closed"
            [label="close/\l"];

        "BatchEventWriterFSM::Waiting" -> "BatchEventWriterFSM::WriteBatch"
            [label="writeBatch/\l"];

        "BatchEventWriterFSM::Waiting" -> "BatchEventWriterFSM::Closed"
            [label="failover/\l"];

        "BatchEventWriterFSM::Waiting" -> "BatchEventWriterFSM::Closed"
            [label="close/\l"];

        "BatchEventWriterFSM::WriteBatch" -> "BatchEventWriterFSM::Closed"
            [label="writeReady/\l"];

        "BatchEventWriterFSM::WriteBatch" -> "BatchEventWriterFSM::Waiting"
            [label="writeReady/\l"];

        "BatchEventWriterFSM::WriteBatch" -> "BatchEventWriterFSM::Waiting"
            [label="payloadWritten/\l"];

        "BatchEventWriterFSM::WriteBatch" -> "BatchEventWriterFSM::Closed"
            [label="failover/\l"];

        "BatchEventWriterFSM::WriteBatch" -> "BatchEventWriterFSM::Closed"
            [label="close/\l"];

        "%start" -> "BatchEventWriterFSM::Suspended"
    }

}
