digraph PushNotification {

    node
        [shape=Mrecord width=1.5];

    subgraph cluster_PushNotificationFSM {

        label="PushNotificationFSM";

        //
        // States (Nodes)
        //

        "PushNotificationFSM::Suspended"
            [label="{Suspended}"];

        "PushNotificationFSM::Waiting"
            [label="{Waiting}"];

        "PushNotificationFSM::WriteBatch"
            [label="{WriteBatch}"];

        "PushNotificationFSM::Closed"
            [label="{Closed}"];

        "%start"
            [label="" shape=circle style=filled fillcolor=black width=0.25];

        //
        // Transitions (Edges)
        //

        "PushNotificationFSM::Suspended" -> "PushNotificationFSM::Waiting"
            [label="accept/\l"];

        "PushNotificationFSM::Suspended" -> "PushNotificationFSM::Closed"
            [label="close/\l"];

        "PushNotificationFSM::Waiting" -> "PushNotificationFSM::WriteBatch"
            [label="writeBatch/\l"];

        "PushNotificationFSM::Waiting" -> "PushNotificationFSM::Closed"
            [label="close/\l"];

        "PushNotificationFSM::WriteBatch" -> "PushNotificationFSM::Closed"
            [label="writeReady/\l"];

        "PushNotificationFSM::WriteBatch" -> "PushNotificationFSM::WriteBatch"
            [label="writeReady/\l"];

        "PushNotificationFSM::WriteBatch" -> "PushNotificationFSM::Waiting"
            [label="writeReady/\l"];

        "PushNotificationFSM::WriteBatch" -> "PushNotificationFSM::WriteBatch"
            [label="payloadWritten/\l"];

        "PushNotificationFSM::WriteBatch" -> "PushNotificationFSM::Waiting"
            [label="payloadWritten/\l"];

        "PushNotificationFSM::WriteBatch" -> "PushNotificationFSM::Closed"
            [label="close/\l"];

        "PushNotificationFSM::Closed" -> "PushNotificationFSM::Closed"
            [label="close/\l"];

        "%start" -> "PushNotificationFSM::Suspended"
    }

}
